---
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    pv.kubernetes.io/provisioned-by: nfs.csi.k8s.io
  name: nextcloud-pv-nfs
spec:
  capacity:
    storage: 1Ti
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: nfs-csi
  mountOptions:
    - nfsvers=4.2
  csi:
    driver: nfs.csi.k8s.io
    readOnly: false
    # volumeHandle format: {nfs-server-address}#{sub-dir-name}#{share-name}
    # make sure this value is unique for every share in the cluster
    volumeHandle: "${NFS_HOST}${NFS_PATH}#nextcloud#"
    volumeAttributes:
      server: "${NFS_HOST}"
      share: "${NFS_PATH}/nextcloud"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nextcloud-pvc
  namespace: cloud
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Ti
  storageClassName: nfs-csi
  volumeName: nextcloud-pv-nfs
---
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    pv.kubernetes.io/provisioned-by: nfs.csi.k8s.io
  name: nextcloud-previews-pvc
spec:
  capacity:
    storage: 1Ti
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: nfs-csi
  mountOptions:
    - nfsvers=4.2
  csi:
    driver: nfs.csi.k8s.io
    readOnly: false
    # volumeHandle format: {nfs-server-address}#{sub-dir-name}#{share-name}
    # make sure this value is unique for every share in the cluster
    volumeHandle: "${NFS_HOST}${NFS_PATH}#nextcloud-previews#"
    volumeAttributes:
      server: "${NFS_HOST}"
      share: "${LOCAL_PATH}/nextcloud-previews-pvc"
